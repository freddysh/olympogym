{"version":3,"sources":["sweetalert2.js"],"names":[],"mappingsfile":"funciones.js","sourcesContent":["/*!\r\n * sweetalert2 v6.6.0\r\n * Released under the MIT License.\r\n */\r\n(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n\ttypeof define === 'function' && define.amd ? define(factory) :\r\n\t(global.Sweetalert2 = factory());\r\n}(this, (function () { 'use strict';\r\n\r\nvar defaultParams = {\r\n  title: '',\r\n  titleText: '',\r\n  text: '',\r\n  html: '',\r\n  type: null,\r\n  customClass: '',\r\n  target: 'body',\r\n  animation: true,\r\n  allowOutsideClick: true,\r\n  allowEscapeKey: true,\r\n  allowEnterKey: true,\r\n  showConfirmButton: true,\r\n  showCancelButton: false,\r\n  preConfirm: null,\r\n  confirmButtonText: 'OK',\r\n  confirmButtonColor: '#3085d6',\r\n  confirmButtonClass: null,\r\n  cancelButtonText: 'Cancel',\r\n  cancelButtonColor: '#aaa',\r\n  cancelButtonClass: null,\r\n  buttonsStyling: true,\r\n  reverseButtons: false,\r\n  focusCancel: false,\r\n  showCloseButton: false,\r\n  showLoaderOnConfirm: false,\r\n  imageUrl: null,\r\n  imageWidth: null,\r\n  imageHeight: null,\r\n  imageClass: null,\r\n  timer: null,\r\n  width: 500,\r\n  padding: 20,\r\n  background: '#fff',\r\n  input: null,\r\n  inputPlaceholder: '',\r\n  inputValue: '',\r\n  inputOptions: {},\r\n  inputAutoTrim: true,\r\n  inputClass: null,\r\n  inputAttributes: {},\r\n  inputValidator: null,\r\n  progressSteps: [],\r\n  currentProgressStep: null,\r\n  progressStepsDistance: '40px',\r\n  onOpen: null,\r\n  onClose: null\r\n};\r\n\r\nvar swalPrefix = 'swal2-';\r\n\r\nvar prefix = function prefix(items) {\r\n  var result = {};\r\n  for (var i in items) {\r\n    result[items[i]] = swalPrefix + items[i];\r\n  }\r\n  return result;\r\n};\r\n\r\nvar swalClasses = prefix(['container', 'shown', 'iosfix', 'modal', 'overlay', 'fade', 'show', 'hide', 'noanimation', 'close', 'title', 'content', 'buttonswrapper', 'confirm', 'cancel', 'icon', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea', 'inputerror', 'validationerror', 'progresssteps', 'activeprogressstep', 'progresscircle', 'progressline', 'loading', 'styled']);\r\n\r\nvar iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\r\n\r\n/*\r\n * Set hover, active and focus-states for buttons (source: http://www.sitepoint.com/javascript-generate-lighter-darker-color)\r\n */\r\nvar colorLuminance = function colorLuminance(hex, lum) {\r\n  // Validate hex string\r\n  hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n  if (hex.length < 6) {\r\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n  }\r\n  lum = lum || 0;\r\n\r\n  // Convert to decimal and change luminosity\r\n  var rgb = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n    var c = parseInt(hex.substr(i * 2, 2), 16);\r\n    c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);\r\n    rgb += ('00' + c).substr(c.length);\r\n  }\r\n\r\n  return rgb;\r\n};\r\n\r\nvar uniqueArray = function uniqueArray(arr) {\r\n  var result = [];\r\n  for (var i in arr) {\r\n    if (result.indexOf(arr[i]) === -1) {\r\n      result.push(arr[i]);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n/* global MouseEvent */\r\n\r\n// Remember state in cases where opening and handling a modal will fiddle with it.\r\nvar states = {\r\n  previousWindowKeyDown: null,\r\n  previousActiveElement: null,\r\n  previousBodyPadding: null\r\n};\r\n\r\n/*\r\n * Add modal + overlay to DOM\r\n */\r\nvar init = function init(params) {\r\n  if (typeof document === 'undefined') {\r\n    console.error('SweetAlert2 requires document to initialize');\r\n    return;\r\n  }\r\n\r\n  var container = document.createElement('div');\r\n  container.className = swalClasses.container;\r\n  container.innerHTML = sweetHTML;\r\n\r\n  var targetElement = document.querySelector(params.target);\r\n  if (!targetElement) {\r\n    console.warn('SweetAlert2: Can\\'t find the target \"' + params.target + '\"');\r\n    targetElement = document.body;\r\n  }\r\n  targetElement.appendChild(container);\r\n\r\n  var modal = getModal();\r\n  var input = getChildByClass(modal, swalClasses.input);\r\n  var file = getChildByClass(modal, swalClasses.file);\r\n  var range = modal.querySelector('.' + swalClasses.range + ' input');\r\n  var rangeOutput = modal.querySelector('.' + swalClasses.range + ' output');\r\n  var select = getChildByClass(modal, swalClasses.select);\r\n  var checkbox = modal.querySelector('.' + swalClasses.checkbox + ' input');\r\n  var textarea = getChildByClass(modal, swalClasses.textarea);\r\n\r\n  input.oninput = function () {\r\n    sweetAlert.resetValidationError();\r\n  };\r\n\r\n  input.onkeydown = function (event) {\r\n    setTimeout(function () {\r\n      if (event.keyCode === 13 && params.allowEnterKey) {\r\n        event.stopPropagation();\r\n        sweetAlert.clickConfirm();\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  file.onchange = function () {\r\n    sweetAlert.resetValidationError();\r\n  };\r\n\r\n  range.oninput = function () {\r\n    sweetAlert.resetValidationError();\r\n    rangeOutput.value = range.value;\r\n  };\r\n\r\n  range.onchange = function () {\r\n    sweetAlert.resetValidationError();\r\n    range.previousSibling.value = range.value;\r\n  };\r\n\r\n  select.onchange = function () {\r\n    sweetAlert.resetValidationError();\r\n  };\r\n\r\n  checkbox.onchange = function () {\r\n    sweetAlert.resetValidationError();\r\n  };\r\n\r\n  textarea.oninput = function () {\r\n    sweetAlert.resetValidationError();\r\n  };\r\n\r\n  return modal;\r\n};\r\n\r\n/*\r\n * Manipulate DOM\r\n */\r\n\r\nvar sweetHTML = ('\\n <div role=\"dialog\" aria-labelledby=\"' + swalClasses.title + '\" aria-describedby=\"' + swalClasses.content + '\" class=\"' + swalClasses.modal + '\" tabindex=\"-1\">\\n   <ul class=\"' + swalClasses.progresssteps + '\"></ul>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.error + '\">\\n     <span class=\"swal2-x-mark\"><span class=\"swal2-x-mark-line-left\"></span><span class=\"swal2-x-mark-line-right\"></span></span>\\n   </div>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.question + '\">?</div>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.warning + '\">!</div>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.info + '\">i</div>\\n   <div class=\"' + swalClasses.icon + ' ' + iconTypes.success + '\">\\n     <div class=\"swal2-success-circular-line-left\"></div>\\n     <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\\n     <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\\n     <div class=\"swal2-success-circular-line-right\"></div>\\n   </div>\\n   <img class=\"' + swalClasses.image + '\">\\n   <h2 class=\"' + swalClasses.title + '\" id=\"' + swalClasses.title + '\"></h2>\\n   <div id=\"' + swalClasses.content + '\" class=\"' + swalClasses.content + '\"></div>\\n   <input class=\"' + swalClasses.input + '\">\\n   <input type=\"file\" class=\"' + swalClasses.file + '\">\\n   <div class=\"' + swalClasses.range + '\">\\n     <output></output>\\n     <input type=\"range\">\\n   </div>\\n   <select class=\"' + swalClasses.select + '\"></select>\\n   <div class=\"' + swalClasses.radio + '\"></div>\\n   <label for=\"' + swalClasses.checkbox + '\" class=\"' + swalClasses.checkbox + '\">\\n     <input type=\"checkbox\">\\n   </label>\\n   <textarea class=\"' + swalClasses.textarea + '\"></textarea>\\n   <div class=\"' + swalClasses.validationerror + '\"></div>\\n   <div class=\"' + swalClasses.buttonswrapper + '\">\\n     <button type=\"button\" class=\"' + swalClasses.confirm + '\">OK</button>\\n     <button type=\"button\" class=\"' + swalClasses.cancel + '\">Cancel</button>\\n   </div>\\n   <button type=\"button\" class=\"' + swalClasses.close + '\" aria-label=\"Close this dialog\">&times;</button>\\n </div>\\n').replace(/(^|\\n)\\s*/g, '');\r\n\r\nvar getContainer = function getContainer() {\r\n  return document.body.querySelector('.' + swalClasses.container);\r\n};\r\n\r\nvar getModal = function getModal() {\r\n  return getContainer() ? getContainer().querySelector('.' + swalClasses.modal) : null;\r\n};\r\n\r\nvar getIcons = function getIcons() {\r\n  var modal = getModal();\r\n  return modal.querySelectorAll('.' + swalClasses.icon);\r\n};\r\n\r\nvar elementByClass = function elementByClass(className) {\r\n  return getContainer() ? getContainer().querySelector('.' + className) : null;\r\n};\r\n\r\nvar getTitle = function getTitle() {\r\n  return elementByClass(swalClasses.title);\r\n};\r\n\r\nvar getContent = function getContent() {\r\n  return elementByClass(swalClasses.content);\r\n};\r\n\r\nvar getImage = function getImage() {\r\n  return elementByClass(swalClasses.image);\r\n};\r\n\r\nvar getButtonsWrapper = function getButtonsWrapper() {\r\n  return elementByClass(swalClasses.buttonswrapper);\r\n};\r\n\r\nvar getProgressSteps = function getProgressSteps() {\r\n  return elementByClass(swalClasses.progresssteps);\r\n};\r\n\r\nvar getValidationError = function getValidationError() {\r\n  return elementByClass(swalClasses.validationerror);\r\n};\r\n\r\nvar getConfirmButton = function getConfirmButton() {\r\n  return elementByClass(swalClasses.confirm);\r\n};\r\n\r\nvar getCancelButton = function getCancelButton() {\r\n  return elementByClass(swalClasses.cancel);\r\n};\r\n\r\nvar getCloseButton = function getCloseButton() {\r\n  return elementByClass(swalClasses.close);\r\n};\r\n\r\nvar getFocusableElements = function getFocusableElements(focusCancel) {\r\n  var buttons = [getConfirmButton(), getCancelButton()];\r\n  if (focusCancel) {\r\n    buttons.reverse();\r\n  }\r\n  var focusableElements = buttons.concat(Array.prototype.slice.call(getModal().querySelectorAll('button, input:not([type=hidden]), textarea, select, a, *[tabindex]:not([tabindex=\"-1\"])')));\r\n  return uniqueArray(focusableElements);\r\n};\r\n\r\nvar hasClass = function hasClass(elem, className) {\r\n  if (elem.classList) {\r\n    return elem.classList.contains(className);\r\n  }\r\n  return false;\r\n};\r\n\r\nvar focusInput = function focusInput(input) {\r\n  input.focus();\r\n\r\n  // place cursor at end of text in text input\r\n  if (input.type !== 'file') {\r\n    // http://stackoverflow.com/a/2345915/1331425\r\n    var val = input.value;\r\n    input.value = '';\r\n    input.value = val;\r\n  }\r\n};\r\n\r\nvar addClass = function addClass(elem, className) {\r\n  if (!elem || !className) {\r\n    return;\r\n  }\r\n  var classes = className.split(/\\s+/).filter(Boolean);\r\n  classes.forEach(function (className) {\r\n    elem.classList.add(className);\r\n  });\r\n};\r\n\r\nvar removeClass = function removeClass(elem, className) {\r\n  if (!elem || !className) {\r\n    return;\r\n  }\r\n  var classes = className.split(/\\s+/).filter(Boolean);\r\n  classes.forEach(function (className) {\r\n    elem.classList.remove(className);\r\n  });\r\n};\r\n\r\nvar getChildByClass = function getChildByClass(elem, className) {\r\n  for (var i = 0; i < elem.childNodes.length; i++) {\r\n    if (hasClass(elem.childNodes[i], className)) {\r\n      return elem.childNodes[i];\r\n    }\r\n  }\r\n};\r\n\r\nvar show = function show(elem, display) {\r\n  if (!display) {\r\n    display = 'block';\r\n  }\r\n  elem.style.opacity = '';\r\n  elem.style.display = display;\r\n};\r\n\r\nvar hide = function hide(elem) {\r\n  elem.style.opacity = '';\r\n  elem.style.display = 'none';\r\n};\r\n\r\nvar empty = function empty(elem) {\r\n  while (elem.firstChild) {\r\n    elem.removeChild(elem.firstChild);\r\n  }\r\n};\r\n\r\n// borrowed from jqeury $(elem).is(':visible') implementation\r\nvar isVisible = function isVisible(elem) {\r\n  return elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length;\r\n};\r\n\r\nvar removeStyleProperty = function removeStyleProperty(elem, property) {\r\n  if (elem.style.removeProperty) {\r\n    elem.style.removeProperty(property);\r\n  } else {\r\n    elem.style.removeAttribute(property);\r\n  }\r\n};\r\n\r\nvar fireClick = function fireClick(node) {\r\n  if (!isVisible(node)) {\r\n    return false;\r\n  }\r\n\r\n  // Taken from http://www.nonobtrusive.com/2011/11/29/programatically-fire-crossbrowser-click-event-with-javascript/\r\n  // Then fixed for today's Chrome browser.\r\n  if (typeof MouseEvent === 'function') {\r\n    // Up-to-date approach\r\n    var mevt = new MouseEvent('click', {\r\n      view: window,\r\n      bubbles: false,\r\n      cancelable: true\r\n    });\r\n    node.dispatchEvent(mevt);\r\n  } else if (document.createEvent) {\r\n    // Fallback\r\n    var evt = document.createEvent('MouseEvents');\r\n    evt.initEvent('click', false, false);\r\n    node.dispatchEvent(evt);\r\n  } else if (document.createEventObject) {\r\n    node.fireEvent('onclick');\r\n  } else if (typeof node.onclick === 'function') {\r\n    node.onclick();\r\n  }\r\n};\r\n\r\nvar animationEndEvent = function () {\r\n  var testEl = document.createElement('div');\r\n  var transEndEventNames = {\r\n    'WebkitAnimation': 'webkitAnimationEnd',\r\n    'OAnimation': 'oAnimationEnd oanimationend',\r\n    'msAnimation': 'MSAnimationEnd',\r\n    'animation': 'animationend'\r\n  };\r\n  for (var i in transEndEventNames) {\r\n    if (transEndEventNames.hasOwnProperty(i) && testEl.style[i] !== undefined) {\r\n      return transEndEventNames[i];\r\n    }\r\n  }\r\n\r\n  return false;\r\n}();\r\n\r\n// Reset previous window keydown handler and focued element\r\nvar resetPrevState = function resetPrevState() {\r\n  window.onkeydown = states.previousWindowKeyDown;\r\n  if (states.previousActiveElement && states.previousActiveElement.focus) {\r\n    var x = window.scrollX;\r\n    var y = window.scrollY;\r\n    states.previousActiveElement.focus();\r\n    if (x && y) {\r\n      // IE has no scrollX/scrollY support\r\n      window.scrollTo(x, y);\r\n    }\r\n  }\r\n};\r\n\r\n// Measure width of scrollbar\r\n// https://github.com/twbs/bootstrap/blob/master/js/modal.js#L279-L286\r\nvar measureScrollbar = function measureScrollbar() {\r\n  var supportsTouch = 'ontouchstart' in window || navigator.msMaxTouchPoints;\r\n  if (supportsTouch) {\r\n    return 0;\r\n  }\r\n  var scrollDiv = document.createElement('div');\r\n  scrollDiv.style.width = '50px';\r\n  scrollDiv.style.height = '50px';\r\n  scrollDiv.style.overflow = 'scroll';\r\n  document.body.appendChild(scrollDiv);\r\n  var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n  document.body.removeChild(scrollDiv);\r\n  return scrollbarWidth;\r\n};\r\n\r\n// JavaScript Debounce Function\r\n// Simplivied version of https://davidwalsh.name/javascript-debounce-function\r\nvar debounce = function debounce(func, wait) {\r\n  var timeout = void 0;\r\n  return function () {\r\n    var later = function later() {\r\n      timeout = null;\r\n      func();\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\r\n  return typeof obj;\r\n} : function (obj) {\r\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar _extends = Object.assign || function (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n\r\n    for (var key in source) {\r\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\nvar modalParams = _extends({}, defaultParams);\r\nvar queue = [];\r\nvar swal2Observer = void 0;\r\n\r\n/*\r\n * Set type, text and actions on modal\r\n */\r\nvar setParameters = function setParameters(params) {\r\n  var modal = getModal() || init(params);\r\n\r\n  for (var param in params) {\r\n    if (!defaultParams.hasOwnProperty(param) && param !== 'extraParams') {\r\n      console.warn('SweetAlert2: Unknown parameter \"' + param + '\"');\r\n    }\r\n  }\r\n\r\n  // set modal width and margin-left\r\n  modal.style.width = typeof params.width === 'number' ? params.width + 'px' : params.width;\r\n\r\n  modal.style.padding = params.padding + 'px';\r\n  modal.style.background = params.background;\r\n  var successIconParts = modal.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\r\n  for (var i = 0; i < successIconParts.length; i++) {\r\n    successIconParts[i].style.background = params.background;\r\n  }\r\n\r\n  var title = getTitle();\r\n  var content = getContent();\r\n  var buttonsWrapper = getButtonsWrapper();\r\n  var confirmButton = getConfirmButton();\r\n  var cancelButton = getCancelButton();\r\n  var closeButton = getCloseButton();\r\n\r\n  // Title\r\n  if (params.titleText) {\r\n    title.innerText = params.titleText;\r\n  } else {\r\n    title.innerHTML = params.title.split('\\n').join('<br>');\r\n  }\r\n\r\n  // Content\r\n  if (params.text || params.html) {\r\n    if (_typeof(params.html) === 'object') {\r\n      content.innerHTML = '';\r\n      if (0 in params.html) {\r\n        for (var _i = 0; _i in params.html; _i++) {\r\n          content.appendChild(params.html[_i].cloneNode(true));\r\n        }\r\n      } else {\r\n        content.appendChild(params.html.cloneNode(true));\r\n      }\r\n    } else if (params.html) {\r\n      content.innerHTML = params.html;\r\n    } else if (params.text) {\r\n      content.textContent = params.text;\r\n    }\r\n    show(content);\r\n  } else {\r\n    hide(content);\r\n  }\r\n\r\n  // Close button\r\n  if (params.showCloseButton) {\r\n    show(closeButton);\r\n  } else {\r\n    hide(closeButton);\r\n  }\r\n\r\n  // Custom Class\r\n  modal.className = swalClasses.modal;\r\n  if (params.customClass) {\r\n    addClass(modal, params.customClass);\r\n  }\r\n\r\n  // Progress steps\r\n  var progressStepsContainer = getProgressSteps();\r\n  var currentProgressStep = parseInt(params.currentProgressStep === null ? sweetAlert.getQueueStep() : params.currentProgressStep, 10);\r\n  if (params.progressSteps.length) {\r\n    show(progressStepsContainer);\r\n    empty(progressStepsContainer);\r\n    if (currentProgressStep >= params.progressSteps.length) {\r\n      console.warn('SweetAlert2: Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\r\n    }\r\n    params.progressSteps.forEach(function (step, index) {\r\n      var circle = document.createElement('li');\r\n      addClass(circle, swalClasses.progresscircle);\r\n      circle.innerHTML = step;\r\n      if (index === currentProgressStep) {\r\n        addClass(circle, swalClasses.activeprogressstep);\r\n      }\r\n      progressStepsContainer.appendChild(circle);\r\n      if (index !== params.progressSteps.length - 1) {\r\n        var line = document.createElement('li');\r\n        addClass(line, swalClasses.progressline);\r\n        line.style.width = params.progressStepsDistance;\r\n        progressStepsContainer.appendChild(line);\r\n      }\r\n    });\r\n  } else {\r\n    hide(progressStepsContainer);\r\n  }\r\n\r\n  // Icon\r\n  var icons = getIcons();\r\n  for (var _i2 = 0; _i2 < icons.length; _i2++) {\r\n    hide(icons[_i2]);\r\n  }\r\n  if (params.type) {\r\n    var validType = false;\r\n    for (var iconType in iconTypes) {\r\n      if (params.type === iconType) {\r\n        validType = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!validType) {\r\n      console.error('SweetAlert2: Unknown alert type: ' + params.type);\r\n      return false;\r\n    }\r\n    var icon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes[params.type]);\r\n    show(icon);\r\n\r\n    // Animate icon\r\n    if (params.animation) {\r\n      switch (params.type) {\r\n        case 'success':\r\n          addClass(icon, 'swal2-animate-success-icon');\r\n          addClass(icon.querySelector('.swal2-success-line-tip'), 'swal2-animate-success-line-tip');\r\n          addClass(icon.querySelector('.swal2-success-line-long'), 'swal2-animate-success-line-long');\r\n          break;\r\n        case 'error':\r\n          addClass(icon, 'swal2-animate-error-icon');\r\n          addClass(icon.querySelector('.swal2-x-mark'), 'swal2-animate-x-mark');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Custom image\r\n  var image = getImage();\r\n  if (params.imageUrl) {\r\n    image.setAttribute('src', params.imageUrl);\r\n    show(image);\r\n\r\n    if (params.imageWidth) {\r\n      image.setAttribute('width', params.imageWidth);\r\n    } else {\r\n      image.removeAttribute('width');\r\n    }\r\n\r\n    if (params.imageHeight) {\r\n      image.setAttribute('height', params.imageHeight);\r\n    } else {\r\n      image.removeAttribute('height');\r\n    }\r\n\r\n    image.className = swalClasses.image;\r\n    if (params.imageClass) {\r\n      addClass(image, params.imageClass);\r\n    }\r\n  } else {\r\n    hide(image);\r\n  }\r\n\r\n  // Cancel button\r\n  if (params.showCancelButton) {\r\n    cancelButton.style.display = 'inline-block';\r\n  } else {\r\n    hide(cancelButton);\r\n  }\r\n\r\n  // Confirm button\r\n  if (params.showConfirmButton) {\r\n    removeStyleProperty(confirmButton, 'display');\r\n  } else {\r\n    hide(confirmButton);\r\n  }\r\n\r\n  // Buttons wrapper\r\n  if (!params.showConfirmButton && !params.showCancelButton) {\r\n    hide(buttonsWrapper);\r\n  } else {\r\n    show(buttonsWrapper);\r\n  }\r\n\r\n  // Edit text on cancel and confirm buttons\r\n  confirmButton.innerHTML = params.confirmButtonText;\r\n  cancelButton.innerHTML = params.cancelButtonText;\r\n\r\n  // Set buttons to selected background colors\r\n  if (params.buttonsStyling) {\r\n    confirmButton.style.backgroundColor = params.confirmButtonColor;\r\n    cancelButton.style.backgroundColor = params.cancelButtonColor;\r\n  }\r\n\r\n  // Add buttons custom classes\r\n  confirmButton.className = swalClasses.confirm;\r\n  addClass(confirmButton, params.confirmButtonClass);\r\n  cancelButton.className = swalClasses.cancel;\r\n  addClass(cancelButton, params.cancelButtonClass);\r\n\r\n  // Buttons styling\r\n  if (params.buttonsStyling) {\r\n    addClass(confirmButton, swalClasses.styled);\r\n    addClass(cancelButton, swalClasses.styled);\r\n  } else {\r\n    removeClass(confirmButton, swalClasses.styled);\r\n    removeClass(cancelButton, swalClasses.styled);\r\n\r\n    confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor = '';\r\n    cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor = '';\r\n  }\r\n\r\n  // CSS animation\r\n  if (params.animation === true) {\r\n    removeClass(modal, swalClasses.noanimation);\r\n  } else {\r\n    addClass(modal, swalClasses.noanimation);\r\n  }\r\n};\r\n\r\n/*\r\n * Animations\r\n */\r\nvar openModal = function openModal(animation, onComplete) {\r\n  var container = getContainer();\r\n  var modal = getModal();\r\n\r\n  if (animation) {\r\n    addClass(modal, swalClasses.show);\r\n    addClass(container, swalClasses.fade);\r\n    removeClass(modal, swalClasses.hide);\r\n  } else {\r\n    removeClass(modal, swalClasses.fade);\r\n  }\r\n  show(modal);\r\n\r\n  // scrolling is 'hidden' until animation is done, after that 'auto'\r\n  container.style.overflowY = 'hidden';\r\n  if (animationEndEvent && !hasClass(modal, swalClasses.noanimation)) {\r\n    modal.addEventListener(animationEndEvent, function swalCloseEventFinished() {\r\n      modal.removeEventListener(animationEndEvent, swalCloseEventFinished);\r\n      container.style.overflowY = 'auto';\r\n    });\r\n  } else {\r\n    container.style.overflowY = 'auto';\r\n  }\r\n\r\n  addClass(document.documentElement, swalClasses.shown);\r\n  addClass(document.body, swalClasses.shown);\r\n  addClass(container, swalClasses.shown);\r\n  fixScrollbar();\r\n  iOSfix();\r\n  states.previousActiveElement = document.activeElement;\r\n  if (onComplete !== null && typeof onComplete === 'function') {\r\n    setTimeout(function () {\r\n      onComplete(modal);\r\n    });\r\n  }\r\n};\r\n\r\nvar fixScrollbar = function fixScrollbar() {\r\n  // for queues, do not do this more than once\r\n  if (states.previousBodyPadding !== null) {\r\n    return;\r\n  }\r\n  // if the body has overflow\r\n  if (document.body.scrollHeight > window.innerHeight) {\r\n    // add padding so the content doesn't shift after removal of scrollbar\r\n    states.previousBodyPadding = document.body.style.paddingRight;\r\n    document.body.style.paddingRight = measureScrollbar() + 'px';\r\n  }\r\n};\r\n\r\nvar undoScrollbar = function undoScrollbar() {\r\n  if (states.previousBodyPadding !== null) {\r\n    document.body.style.paddingRight = states.previousBodyPadding;\r\n    states.previousBodyPadding = null;\r\n  }\r\n};\r\n\r\n// Fix iOS scrolling http://stackoverflow.com/q/39626302/1331425\r\nvar iOSfix = function iOSfix() {\r\n  var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n  if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\r\n    var offset = document.body.scrollTop;\r\n    document.body.style.top = offset * -1 + 'px';\r\n    addClass(document.body, swalClasses.iosfix);\r\n  }\r\n};\r\n\r\nvar undoIOSfix = function undoIOSfix() {\r\n  if (hasClass(document.body, swalClasses.iosfix)) {\r\n    var offset = parseInt(document.body.style.top, 10);\r\n    removeClass(document.body, swalClasses.iosfix);\r\n    document.body.style.top = '';\r\n    document.body.scrollTop = offset * -1;\r\n  }\r\n};\r\n\r\n// SweetAlert entry point\r\nvar sweetAlert = function sweetAlert() {\r\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n\r\n  if (args[0] === undefined) {\r\n    console.error('SweetAlert2 expects at least 1 attribute!');\r\n    return false;\r\n  }\r\n\r\n  var params = _extends({}, modalParams);\r\n\r\n  switch (_typeof(args[0])) {\r\n    case 'string':\r\n      params.title = args[0];\r\n      params.html = args[1];\r\n      params.type = args[2];\r\n\r\n      break;\r\n\r\n    case 'object':\r\n      _extends(params, args[0]);\r\n      params.extraParams = args[0].extraParams;\r\n\r\n      if (params.input === 'email' && params.inputValidator === null) {\r\n        params.inputValidator = function (email) {\r\n          return new Promise(function (resolve, reject) {\r\n            var emailRegex = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n            if (emailRegex.test(email)) {\r\n              resolve();\r\n            } else {\r\n              reject('Invalid email address');\r\n            }\r\n          });\r\n        };\r\n      }\r\n\r\n      if (params.input === 'url' && params.inputValidator === null) {\r\n        params.inputValidator = function (url) {\r\n          return new Promise(function (resolve, reject) {\r\n            var urlRegex = /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/;\r\n            if (urlRegex.test(url)) {\r\n              resolve();\r\n            } else {\r\n              reject('Invalid URL');\r\n            }\r\n          });\r\n        };\r\n      }\r\n      break;\r\n\r\n    default:\r\n      console.error('SweetAlert2: Unexpected type of argument! Expected \"string\" or \"object\", got ' + _typeof(args[0]));\r\n      return false;\r\n  }\r\n\r\n  setParameters(params);\r\n\r\n  var container = getContainer();\r\n  var modal = getModal();\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    // Close on timer\r\n    if (params.timer) {\r\n      modal.timeout = setTimeout(function () {\r\n        sweetAlert.closeModal(params.onClose);\r\n        reject('timer');\r\n      }, params.timer);\r\n    }\r\n\r\n    // Get input element by specified type or, if type isn't specified, by params.input\r\n    var getInput = function getInput(inputType) {\r\n      inputType = inputType || params.input;\r\n      if (!inputType) {\r\n        return null;\r\n      }\r\n      switch (inputType) {\r\n        case 'select':\r\n        case 'textarea':\r\n        case 'file':\r\n          return getChildByClass(modal, swalClasses[inputType]);\r\n        case 'checkbox':\r\n          return modal.querySelector('.' + swalClasses.checkbox + ' input');\r\n        case 'radio':\r\n          return modal.querySelector('.' + swalClasses.radio + ' input:checked') || modal.querySelector('.' + swalClasses.radio + ' input:first-child');\r\n        case 'range':\r\n          return modal.querySelector('.' + swalClasses.range + ' input');\r\n        default:\r\n          return getChildByClass(modal, swalClasses.input);\r\n      }\r\n    };\r\n\r\n    // Get the value of the modal input\r\n    var getInputValue = function getInputValue() {\r\n      var input = getInput();\r\n      if (!input) {\r\n        return null;\r\n      }\r\n      switch (params.input) {\r\n        case 'checkbox':\r\n          return input.checked ? 1 : 0;\r\n        case 'radio':\r\n          return input.checked ? input.value : null;\r\n        case 'file':\r\n          return input.files.length ? input.files[0] : null;\r\n        default:\r\n          return params.inputAutoTrim ? input.value.trim() : input.value;\r\n      }\r\n    };\r\n\r\n    // input autofocus\r\n    if (params.input) {\r\n      setTimeout(function () {\r\n        var input = getInput();\r\n        if (input) {\r\n          focusInput(input);\r\n        }\r\n      }, 0);\r\n    }\r\n\r\n    var confirm = function confirm(value) {\r\n      if (params.showLoaderOnConfirm) {\r\n        sweetAlert.showLoading();\r\n      }\r\n\r\n      if (params.preConfirm) {\r\n        params.preConfirm(value, params.extraParams).then(function (preConfirmValue) {\r\n          sweetAlert.closeModal(params.onClose);\r\n          resolve(preConfirmValue || value);\r\n        }, function (error) {\r\n          sweetAlert.hideLoading();\r\n          if (error) {\r\n            sweetAlert.showValidationError(error);\r\n          }\r\n        });\r\n      } else {\r\n        sweetAlert.closeModal(params.onClose);\r\n        resolve(value);\r\n      }\r\n    };\r\n\r\n    // Mouse interactions\r\n    var onButtonEvent = function onButtonEvent(event) {\r\n      var e = event || window.event;\r\n      var target = e.target || e.srcElement;\r\n      var confirmButton = getConfirmButton();\r\n      var cancelButton = getCancelButton();\r\n      var targetedConfirm = confirmButton && (confirmButton === target || confirmButton.contains(target));\r\n      var targetedCancel = cancelButton && (cancelButton === target || cancelButton.contains(target));\r\n\r\n      switch (e.type) {\r\n        case 'mouseover':\r\n        case 'mouseup':\r\n          if (params.buttonsStyling) {\r\n            if (targetedConfirm) {\r\n              confirmButton.style.backgroundColor = colorLuminance(params.confirmButtonColor, -0.1);\r\n            } else if (targetedCancel) {\r\n              cancelButton.style.backgroundColor = colorLuminance(params.cancelButtonColor, -0.1);\r\n            }\r\n          }\r\n          break;\r\n        case 'mouseout':\r\n          if (params.buttonsStyling) {\r\n            if (targetedConfirm) {\r\n              confirmButton.style.backgroundColor = params.confirmButtonColor;\r\n            } else if (targetedCancel) {\r\n              cancelButton.style.backgroundColor = params.cancelButtonColor;\r\n            }\r\n          }\r\n          break;\r\n        case 'mousedown':\r\n          if (params.buttonsStyling) {\r\n            if (targetedConfirm) {\r\n              confirmButton.style.backgroundColor = colorLuminance(params.confirmButtonColor, -0.2);\r\n            } else if (targetedCancel) {\r\n              cancelButton.style.backgroundColor = colorLuminance(params.cancelButtonColor, -0.2);\r\n            }\r\n          }\r\n          break;\r\n        case 'click':\r\n          // Clicked 'confirm'\r\n          if (targetedConfirm && sweetAlert.isVisible()) {\r\n            sweetAlert.disableButtons();\r\n            if (params.input) {\r\n              var inputValue = getInputValue();\r\n\r\n              if (params.inputValidator) {\r\n                sweetAlert.disableInput();\r\n                params.inputValidator(inputValue, params.extraParams).then(function () {\r\n                  sweetAlert.enableButtons();\r\n                  sweetAlert.enableInput();\r\n                  confirm(inputValue);\r\n                }, function (error) {\r\n                  sweetAlert.enableButtons();\r\n                  sweetAlert.enableInput();\r\n                  if (error) {\r\n                    sweetAlert.showValidationError(error);\r\n                  }\r\n                });\r\n              } else {\r\n                confirm(inputValue);\r\n              }\r\n            } else {\r\n              confirm(true);\r\n            }\r\n\r\n            // Clicked 'cancel'\r\n          } else if (targetedCancel && sweetAlert.isVisible()) {\r\n            sweetAlert.disableButtons();\r\n            sweetAlert.closeModal(params.onClose);\r\n            reject('cancel');\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n    };\r\n\r\n    var buttons = modal.querySelectorAll('button');\r\n    for (var i = 0; i < buttons.length; i++) {\r\n      buttons[i].onclick = onButtonEvent;\r\n      buttons[i].onmouseover = onButtonEvent;\r\n      buttons[i].onmouseout = onButtonEvent;\r\n      buttons[i].onmousedown = onButtonEvent;\r\n    }\r\n\r\n    // Closing modal by close button\r\n    getCloseButton().onclick = function () {\r\n      sweetAlert.closeModal(params.onClose);\r\n      reject('close');\r\n    };\r\n\r\n    // Closing modal by overlay click\r\n    container.onclick = function (e) {\r\n      if (e.target !== container) {\r\n        return;\r\n      }\r\n      if (params.allowOutsideClick) {\r\n        sweetAlert.closeModal(params.onClose);\r\n        reject('overlay');\r\n      }\r\n    };\r\n\r\n    var buttonsWrapper = getButtonsWrapper();\r\n    var confirmButton = getConfirmButton();\r\n    var cancelButton = getCancelButton();\r\n\r\n    // Reverse buttons (Confirm on the right side)\r\n    if (params.reverseButtons) {\r\n      confirmButton.parentNode.insertBefore(cancelButton, confirmButton);\r\n    } else {\r\n      confirmButton.parentNode.insertBefore(confirmButton, cancelButton);\r\n    }\r\n\r\n    // Focus handling\r\n    var setFocus = function setFocus(index, increment) {\r\n      var focusableElements = getFocusableElements(params.focusCancel);\r\n      // search for visible elements and select the next possible match\r\n      for (var _i3 = 0; _i3 < focusableElements.length; _i3++) {\r\n        index = index + increment;\r\n\r\n        // rollover to first item\r\n        if (index === focusableElements.length) {\r\n          index = 0;\r\n\r\n          // go to last item\r\n        } else if (index === -1) {\r\n          index = focusableElements.length - 1;\r\n        }\r\n\r\n        // determine if element is visible\r\n        var el = focusableElements[index];\r\n        if (isVisible(el)) {\r\n          return el.focus();\r\n        }\r\n      }\r\n    };\r\n\r\n    var handleKeyDown = function handleKeyDown(event) {\r\n      var e = event || window.event;\r\n      var keyCode = e.keyCode || e.which;\r\n\r\n      if ([9, 13, 32, 27].indexOf(keyCode) === -1) {\r\n        // Don't do work on keys we don't care about.\r\n        return;\r\n      }\r\n\r\n      var targetElement = e.target || e.srcElement;\r\n\r\n      var focusableElements = getFocusableElements(params.focusCancel);\r\n      var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\r\n      for (var _i4 = 0; _i4 < focusableElements.length; _i4++) {\r\n        if (targetElement === focusableElements[_i4]) {\r\n          btnIndex = _i4;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // TAB\r\n      if (keyCode === 9) {\r\n        if (!e.shiftKey) {\r\n          // Cycle to the next button\r\n          setFocus(btnIndex, 1);\r\n        } else {\r\n          // Cycle to the prev button\r\n          setFocus(btnIndex, -1);\r\n        }\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        // ENTER/SPACE\r\n      } else if (keyCode === 13 || keyCode === 32) {\r\n        if (btnIndex === -1 && params.allowEnterKey) {\r\n          // ENTER/SPACE clicked outside of a button.\r\n          if (params.focusCancel) {\r\n            fireClick(cancelButton, e);\r\n          } else {\r\n            fireClick(confirmButton, e);\r\n          }\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }\r\n        // ESC\r\n      } else if (keyCode === 27 && params.allowEscapeKey === true) {\r\n        sweetAlert.closeModal(params.onClose);\r\n        reject('esc');\r\n      }\r\n    };\r\n\r\n    states.previousWindowKeyDown = window.onkeydown;\r\n    window.onkeydown = handleKeyDown;\r\n\r\n    // Loading state\r\n    if (params.buttonsStyling) {\r\n      confirmButton.style.borderLeftColor = params.confirmButtonColor;\r\n      confirmButton.style.borderRightColor = params.confirmButtonColor;\r\n    }\r\n\r\n    /**\r\n     * Show spinner instead of Confirm button and disable Cancel button\r\n     */\r\n    sweetAlert.showLoading = sweetAlert.enableLoading = function () {\r\n      show(buttonsWrapper);\r\n      show(confirmButton, 'inline-block');\r\n      addClass(buttonsWrapper, swalClasses.loading);\r\n      addClass(modal, swalClasses.loading);\r\n      confirmButton.disabled = true;\r\n      cancelButton.disabled = true;\r\n    };\r\n\r\n    /**\r\n     * Show spinner instead of Confirm button and disable Cancel button\r\n     */\r\n    sweetAlert.hideLoading = sweetAlert.disableLoading = function () {\r\n      if (!params.showConfirmButton) {\r\n        hide(confirmButton);\r\n        if (!params.showCancelButton) {\r\n          hide(getButtonsWrapper());\r\n        }\r\n      }\r\n      removeClass(buttonsWrapper, swalClasses.loading);\r\n      removeClass(modal, swalClasses.loading);\r\n      confirmButton.disabled = false;\r\n      cancelButton.disabled = false;\r\n    };\r\n\r\n    sweetAlert.getTitle = function () {\r\n      return getTitle();\r\n    };\r\n    sweetAlert.getContent = function () {\r\n      return getContent();\r\n    };\r\n    sweetAlert.getInput = function () {\r\n      return getInput();\r\n    };\r\n    sweetAlert.getImage = function () {\r\n      return getImage();\r\n    };\r\n    sweetAlert.getButtonsWrapper = function () {\r\n      return getButtonsWrapper();\r\n    };\r\n    sweetAlert.getConfirmButton = function () {\r\n      return getConfirmButton();\r\n    };\r\n    sweetAlert.getCancelButton = function () {\r\n      return getCancelButton();\r\n    };\r\n\r\n    sweetAlert.enableButtons = function () {\r\n      confirmButton.disabled = false;\r\n      cancelButton.disabled = false;\r\n    };\r\n\r\n    sweetAlert.disableButtons = function () {\r\n      confirmButton.disabled = true;\r\n      cancelButton.disabled = true;\r\n    };\r\n\r\n    sweetAlert.enableConfirmButton = function () {\r\n      confirmButton.disabled = false;\r\n    };\r\n\r\n    sweetAlert.disableConfirmButton = function () {\r\n      confirmButton.disabled = true;\r\n    };\r\n\r\n    sweetAlert.enableInput = function () {\r\n      var input = getInput();\r\n      if (!input) {\r\n        return false;\r\n      }\r\n      if (input.type === 'radio') {\r\n        var radiosContainer = input.parentNode.parentNode;\r\n        var radios = radiosContainer.querySelectorAll('input');\r\n        for (var _i5 = 0; _i5 < radios.length; _i5++) {\r\n          radios[_i5].disabled = false;\r\n        }\r\n      } else {\r\n        input.disabled = false;\r\n      }\r\n    };\r\n\r\n    sweetAlert.disableInput = function () {\r\n      var input = getInput();\r\n      if (!input) {\r\n        return false;\r\n      }\r\n      if (input && input.type === 'radio') {\r\n        var radiosContainer = input.parentNode.parentNode;\r\n        var radios = radiosContainer.querySelectorAll('input');\r\n        for (var _i6 = 0; _i6 < radios.length; _i6++) {\r\n          radios[_i6].disabled = true;\r\n        }\r\n      } else {\r\n        input.disabled = true;\r\n      }\r\n    };\r\n\r\n    // Set modal min-height to disable scrolling inside the modal\r\n    sweetAlert.recalculateHeight = debounce(function () {\r\n      var modal = getModal();\r\n      if (!modal) {\r\n        return;\r\n      }\r\n      var prevState = modal.style.display;\r\n      modal.style.minHeight = '';\r\n      show(modal);\r\n      modal.style.minHeight = modal.scrollHeight + 1 + 'px';\r\n      modal.style.display = prevState;\r\n    }, 50);\r\n\r\n    // Show block with validation error\r\n    sweetAlert.showValidationError = function (error) {\r\n      var validationError = getValidationError();\r\n      validationError.innerHTML = error;\r\n      show(validationError);\r\n\r\n      var input = getInput();\r\n      if (input) {\r\n        focusInput(input);\r\n        addClass(input, swalClasses.inputerror);\r\n      }\r\n    };\r\n\r\n    // Hide block with validation error\r\n    sweetAlert.resetValidationError = function () {\r\n      var validationError = getValidationError();\r\n      hide(validationError);\r\n      sweetAlert.recalculateHeight();\r\n\r\n      var input = getInput();\r\n      if (input) {\r\n        removeClass(input, swalClasses.inputerror);\r\n      }\r\n    };\r\n\r\n    sweetAlert.getProgressSteps = function () {\r\n      return params.progressSteps;\r\n    };\r\n\r\n    sweetAlert.setProgressSteps = function (progressSteps) {\r\n      params.progressSteps = progressSteps;\r\n      setParameters(params);\r\n    };\r\n\r\n    sweetAlert.showProgressSteps = function () {\r\n      show(getProgressSteps());\r\n    };\r\n\r\n    sweetAlert.hideProgressSteps = function () {\r\n      hide(getProgressSteps());\r\n    };\r\n\r\n    sweetAlert.enableButtons();\r\n    sweetAlert.hideLoading();\r\n    sweetAlert.resetValidationError();\r\n\r\n    // inputs\r\n    var inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\r\n    var input = void 0;\r\n    for (var _i7 = 0; _i7 < inputTypes.length; _i7++) {\r\n      var inputClass = swalClasses[inputTypes[_i7]];\r\n      var inputContainer = getChildByClass(modal, inputClass);\r\n      input = getInput(inputTypes[_i7]);\r\n\r\n      // set attributes\r\n      if (input) {\r\n        for (var j in input.attributes) {\r\n          if (input.attributes.hasOwnProperty(j)) {\r\n            var attrName = input.attributes[j].name;\r\n            if (attrName !== 'type' && attrName !== 'value') {\r\n              input.removeAttribute(attrName);\r\n            }\r\n          }\r\n        }\r\n        for (var attr in params.inputAttributes) {\r\n          input.setAttribute(attr, params.inputAttributes[attr]);\r\n        }\r\n      }\r\n\r\n      // set class\r\n      inputContainer.className = inputClass;\r\n      if (params.inputClass) {\r\n        addClass(inputContainer, params.inputClass);\r\n      }\r\n\r\n      hide(inputContainer);\r\n    }\r\n\r\n    var populateInputOptions = void 0;\r\n    switch (params.input) {\r\n      case 'text':\r\n      case 'email':\r\n      case 'password':\r\n      case 'number':\r\n      case 'tel':\r\n      case 'url':\r\n        input = getChildByClass(modal, swalClasses.input);\r\n        input.value = params.inputValue;\r\n        input.placeholder = params.inputPlaceholder;\r\n        input.type = params.input;\r\n        show(input);\r\n        break;\r\n      case 'file':\r\n        input = getChildByClass(modal, swalClasses.file);\r\n        input.placeholder = params.inputPlaceholder;\r\n        input.type = params.input;\r\n        show(input);\r\n        break;\r\n      case 'range':\r\n        var range = getChildByClass(modal, swalClasses.range);\r\n        var rangeInput = range.querySelector('input');\r\n        var rangeOutput = range.querySelector('output');\r\n        rangeInput.value = params.inputValue;\r\n        rangeInput.type = params.input;\r\n        rangeOutput.value = params.inputValue;\r\n        show(range);\r\n        break;\r\n      case 'select':\r\n        var select = getChildByClass(modal, swalClasses.select);\r\n        select.innerHTML = '';\r\n        if (params.inputPlaceholder) {\r\n          var placeholder = document.createElement('option');\r\n          placeholder.innerHTML = params.inputPlaceholder;\r\n          placeholder.value = '';\r\n          placeholder.disabled = true;\r\n          placeholder.selected = true;\r\n          select.appendChild(placeholder);\r\n        }\r\n        populateInputOptions = function populateInputOptions(inputOptions) {\r\n          for (var optionValue in inputOptions) {\r\n            var option = document.createElement('option');\r\n            option.value = optionValue;\r\n            option.innerHTML = inputOptions[optionValue];\r\n            if (params.inputValue === optionValue) {\r\n              option.selected = true;\r\n            }\r\n            select.appendChild(option);\r\n          }\r\n          show(select);\r\n          select.focus();\r\n        };\r\n        break;\r\n      case 'radio':\r\n        var radio = getChildByClass(modal, swalClasses.radio);\r\n        radio.innerHTML = '';\r\n        populateInputOptions = function populateInputOptions(inputOptions) {\r\n          for (var radioValue in inputOptions) {\r\n            var radioInput = document.createElement('input');\r\n            var radioLabel = document.createElement('label');\r\n            var radioLabelSpan = document.createElement('span');\r\n            radioInput.type = 'radio';\r\n            radioInput.name = swalClasses.radio;\r\n            radioInput.value = radioValue;\r\n            if (params.inputValue === radioValue) {\r\n              radioInput.checked = true;\r\n            }\r\n            radioLabelSpan.innerHTML = inputOptions[radioValue];\r\n            radioLabel.appendChild(radioInput);\r\n            radioLabel.appendChild(radioLabelSpan);\r\n            radioLabel.for = radioInput.id;\r\n            radio.appendChild(radioLabel);\r\n          }\r\n          show(radio);\r\n          var radios = radio.querySelectorAll('input');\r\n          if (radios.length) {\r\n            radios[0].focus();\r\n          }\r\n        };\r\n        break;\r\n      case 'checkbox':\r\n        var checkbox = getChildByClass(modal, swalClasses.checkbox);\r\n        var checkboxInput = getInput('checkbox');\r\n        checkboxInput.type = 'checkbox';\r\n        checkboxInput.value = 1;\r\n        checkboxInput.id = swalClasses.checkbox;\r\n        checkboxInput.checked = Boolean(params.inputValue);\r\n        var label = checkbox.getElementsByTagName('span');\r\n        if (label.length) {\r\n          checkbox.removeChild(label[0]);\r\n        }\r\n        label = document.createElement('span');\r\n        label.innerHTML = params.inputPlaceholder;\r\n        checkbox.appendChild(label);\r\n        show(checkbox);\r\n        break;\r\n      case 'textarea':\r\n        var textarea = getChildByClass(modal, swalClasses.textarea);\r\n        textarea.value = params.inputValue;\r\n        textarea.placeholder = params.inputPlaceholder;\r\n        show(textarea);\r\n        break;\r\n      case null:\r\n        break;\r\n      default:\r\n        console.error('SweetAlert2: Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"' + params.input + '\"');\r\n        break;\r\n    }\r\n\r\n    if (params.input === 'select' || params.input === 'radio') {\r\n      if (params.inputOptions instanceof Promise) {\r\n        sweetAlert.showLoading();\r\n        params.inputOptions.then(function (inputOptions) {\r\n          sweetAlert.hideLoading();\r\n          populateInputOptions(inputOptions);\r\n        });\r\n      } else if (_typeof(params.inputOptions) === 'object') {\r\n        populateInputOptions(params.inputOptions);\r\n      } else {\r\n        console.error('SweetAlert2: Unexpected type of inputOptions! Expected object or Promise, got ' + _typeof(params.inputOptions));\r\n      }\r\n    }\r\n\r\n    openModal(params.animation, params.onOpen);\r\n\r\n    // Focus the first element (input or button)\r\n    if (params.allowEnterKey) {\r\n      setFocus(-1, 1);\r\n    } else {\r\n      if (document.activeElement) {\r\n        document.activeElement.blur();\r\n      }\r\n    }\r\n\r\n    // fix scroll\r\n    getContainer().scrollTop = 0;\r\n\r\n    // Observe changes inside the modal and adjust height\r\n    if (typeof MutationObserver !== 'undefined' && !swal2Observer) {\r\n      swal2Observer = new MutationObserver(sweetAlert.recalculateHeight);\r\n      swal2Observer.observe(modal, { childList: true, characterData: true, subtree: true });\r\n    }\r\n  });\r\n};\r\n\r\n/*\r\n * Global function to determine if swal2 modal is shown\r\n */\r\nsweetAlert.isVisible = function () {\r\n  return !!getModal();\r\n};\r\n\r\n/*\r\n * Global function for chaining sweetAlert modals\r\n */\r\nsweetAlert.queue = function (steps) {\r\n  queue = steps;\r\n  var resetQueue = function resetQueue() {\r\n    queue = [];\r\n    document.body.removeAttribute('data-swal2-queue-step');\r\n  };\r\n  var queueResult = [];\r\n  return new Promise(function (resolve, reject) {\r\n    (function step(i, callback) {\r\n      if (i < queue.length) {\r\n        document.body.setAttribute('data-swal2-queue-step', i);\r\n\r\n        sweetAlert(queue[i]).then(function (result) {\r\n          queueResult.push(result);\r\n          step(i + 1, callback);\r\n        }, function (dismiss) {\r\n          resetQueue();\r\n          reject(dismiss);\r\n        });\r\n      } else {\r\n        resetQueue();\r\n        resolve(queueResult);\r\n      }\r\n    })(0);\r\n  });\r\n};\r\n\r\n/*\r\n * Global function for getting the index of current modal in queue\r\n */\r\nsweetAlert.getQueueStep = function () {\r\n  return document.body.getAttribute('data-swal2-queue-step');\r\n};\r\n\r\n/*\r\n * Global function for inserting a modal to the queue\r\n */\r\nsweetAlert.insertQueueStep = function (step, index) {\r\n  if (index && index < queue.length) {\r\n    return queue.splice(index, 0, step);\r\n  }\r\n  return queue.push(step);\r\n};\r\n\r\n/*\r\n * Global function for deleting a modal from the queue\r\n */\r\nsweetAlert.deleteQueueStep = function (index) {\r\n  if (typeof queue[index] !== 'undefined') {\r\n    queue.splice(index, 1);\r\n  }\r\n};\r\n\r\n/*\r\n * Global function to close sweetAlert\r\n */\r\nsweetAlert.close = sweetAlert.closeModal = function (onComplete) {\r\n  var container = getContainer();\r\n  var modal = getModal();\r\n  if (!modal) {\r\n    return;\r\n  }\r\n  removeClass(modal, swalClasses.show);\r\n  addClass(modal, swalClasses.hide);\r\n  clearTimeout(modal.timeout);\r\n\r\n  resetPrevState();\r\n\r\n  var removeModalAndResetState = function removeModalAndResetState() {\r\n    container.parentNode.removeChild(container);\r\n    removeClass(document.documentElement, swalClasses.shown);\r\n    removeClass(document.body, swalClasses.shown);\r\n    undoScrollbar();\r\n    undoIOSfix();\r\n  };\r\n\r\n  // If animation is supported, animate\r\n  if (animationEndEvent && !hasClass(modal, swalClasses.noanimation)) {\r\n    modal.addEventListener(animationEndEvent, function swalCloseEventFinished() {\r\n      modal.removeEventListener(animationEndEvent, swalCloseEventFinished);\r\n      if (hasClass(modal, swalClasses.hide)) {\r\n        removeModalAndResetState();\r\n      }\r\n    });\r\n  } else {\r\n    // Otherwise, remove immediately\r\n    removeModalAndResetState();\r\n  }\r\n  if (onComplete !== null && typeof onComplete === 'function') {\r\n    setTimeout(function () {\r\n      onComplete(modal);\r\n    });\r\n  }\r\n};\r\n\r\n/*\r\n * Global function to click 'Confirm' button\r\n */\r\nsweetAlert.clickConfirm = function () {\r\n  return getConfirmButton().click();\r\n};\r\n\r\n/*\r\n * Global function to click 'Cancel' button\r\n */\r\nsweetAlert.clickCancel = function () {\r\n  return getCancelButton().click();\r\n};\r\n\r\n/**\r\n * Set default params for each popup\r\n * @param {Object} userParams\r\n */\r\nsweetAlert.setDefaults = function (userParams) {\r\n  if (!userParams || (typeof userParams === 'undefined' ? 'undefined' : _typeof(userParams)) !== 'object') {\r\n    return console.error('SweetAlert2: the argument for setDefaults() is required and has to be a object');\r\n  }\r\n\r\n  for (var param in userParams) {\r\n    if (!defaultParams.hasOwnProperty(param) && param !== 'extraParams') {\r\n      console.warn('SweetAlert2: Unknown parameter \"' + param + '\"');\r\n      delete userParams[param];\r\n    }\r\n  }\r\n\r\n  _extends(modalParams, userParams);\r\n};\r\n\r\n/**\r\n * Reset default params for each popup\r\n */\r\nsweetAlert.resetDefaults = function () {\r\n  modalParams = _extends({}, defaultParams);\r\n};\r\n\r\nsweetAlert.noop = function () {};\r\n\r\nsweetAlert.version = '6.6.0';\r\n\r\nsweetAlert.default = sweetAlert;\r\n\r\nreturn sweetAlert;\r\n\r\n})));\r\nif (window.Sweetalert2) window.sweetAlert = window.swal = window.Sweetalert2;\r\n"]}